// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "sqlite"
  url          = "file:./dev.db"
  relationMode = "prisma"
}

model Hotel {
  id                  String    @id @default(uuid())
  userId              String
  title               String
  description         String
  image               String
  country             String
  state               String
  city                String
  locationDescription String
  gym                 Boolean   @default(false)
  bar                 Boolean   @default(false)
  spa                 Boolean   @default(false)
  laundry             Boolean   @default(false)
  restaurant          Boolean   @default(false)
  shopping            Boolean   @default(false)
  freeParking         Boolean   @default(false)
  bikeRental          Boolean   @default(false)
  freeWifi            Boolean   @default(false)
  movieNights         Boolean   @default(false)
  coffeeShop          Boolean   @default(false)
  swimmingPool        Boolean   @default(false)
  addedAt             DateTime  @default(now())
  updatedAt           DateTime  @default(now())
  rooms               Room[]
  bookings            Booking[]
}

model Room {
  id             String    @id @default(uuid())
  title          String
  description    String
  bedCount       Int       @default(0)
  guestCount     Int       @default(0)
  bathroomCount  Int       @default(0)
  kingBed        Int       @default(0)
  queenBed       Int       @default(0)
  image          String
  breakfastPrice Int
  roomPrice      Int
  roomService    Boolean   @default(false)
  TV             Boolean   @default(false)
  balcony        Boolean   @default(false)
  freeWifi       Boolean   @default(false)
  cityView       Boolean   @default(false)
  oceanView      Boolean   @default(false)
  forestView     Boolean   @default(false)
  mountainView   Boolean   @default(false)
  airCondition   Boolean   @default(false)
  soundProofed   Boolean   @default(false)
  bookings       Booking[]
  hotelId        String?
  hotel          Hotel?    @relation(fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([hotelId])
}

model Booking {
  id                String   @id @default(uuid())
  userId            String
  userName          String
  hotelId           String?
  hotelOwnerId      String
  startDate         DateTime
  endDate           DateTime
  breakfaseIncluded Boolean
  currency          String
  totalPrice        Int
  paymentStatus     Boolean  @default(false)
  paymentInentId    String   @unique
  bookedAt          DateTime @default(now())
  roomId            String?

  hotel Hotel? @relation(fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  room  Room?  @relation(fields: [roomId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([hotelId])
  @@index([roomId])
}
